<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qt.mail.modules.sys.dao.UserTokenMapper">
  <resultMap id="BaseResultMap" type="com.qt.mail.modules.sys.entity.UserToken">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="userId" jdbcType="VARCHAR" property="userId" />
    <result column="expireTime" jdbcType="VARCHAR" property="expireTime" />
    <result column="updateTime" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, token, userId, expireTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qt_user_token
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据token得到用户token -->
  <select id="getByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
    from qt_user_token
    where token = #{token,jdbcType=VARCHAR}
  </select>
  
   <!-- 根据userId得到用户token -->
  <select id="getByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
    from qt_user_token
    where userId = #{userId,jdbcType=VARCHAR}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from qt_user_token
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qt.mail.modules.sys.entity.UserToken">
    insert into qt_user_token (id, token, userId, 
      expireTime, updateTime)
    values (#{id,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{expireTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qt.mail.modules.sys.entity.UserToken">
    insert into qt_user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="expireTime != null">
        expireTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qt.mail.modules.sys.entity.UserToken">
    update qt_user_token
    <set>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="expireTime != null">
        expireTime = #{expireTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qt.mail.modules.sys.entity.UserToken">
    update qt_user_token
    set token = #{token,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=VARCHAR},
      expireTime = #{expireTime,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>